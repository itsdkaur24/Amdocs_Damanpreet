{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red128\green0\blue128;}
{\*\expandedcolortbl;;\csgenericrgb\c50001\c0\c50001;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx577\tx1155\tx1733\tx2311\tx2889\tx3467\tx4045\tx4623\tx5201\tx5779\tx6357\tx6935\tx7513\tx8091\tx8669\tx9247\tx9825\tx10403\tx10981\tx11559\tx12137\tx12715\tx13293\tx13871\tx14449\tx15027\tx15605\tx16183\tx16761\tx17339\tx17917\tx18495\tx19072\tx19650\tx20228\tx20806\tx21384\tx21962\tx22540\tx23118\tx23696\tx24274\tx24852\tx25430\tx26008\tx26586\tx27164\tx27742\tx28320\tx28898\tx29476\tx30054\tx30632\tx31210\tx31788\tx32366\tx32944\tx33522\tx34100\tx34678\tx35256\tx35834\tx36412\tx36990\tx37567\tx38145\tx38723\tx39301\tx39879\tx40457\tx41035\tx41613\tx42191\tx42769\tx43347\tx43925\tx44503\tx45081\tx45659\tx46237\tx46815\tx47393\tx47971\tx48549\tx49127\tx49705\tx50283\tx50861\tx51439\tx52017\tx52595\tx53173\tx53751\tx54329\tx54907\tx55485\tx56062\tx56640\tx57218\tx57796\li577\fi-578\partightenfactor0

\f0\fs24 \cf2 \CocoaLigature0 package Amdocs_package
\f1 \cf0 \CocoaLigature1 ii\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 mport java.util.*;\
\
public class Assignment6 \{\
    public static void main(String[] args) \{\
        LinkedHashMap<Integer, String> countries = new LinkedHashMap<>();\
        countries.put(1, "India");\
        countries.put(2, "USA");\
        countries.put(3, "UK");\
        countries.put(4, "Germany");\
        countries.put(5, "France");\
        countries.put(6, "Canada");\
        countries.put(7, "Japan");\
        countries.put(8, "China");\
        countries.put(9, "Australia");\
        countries.put(10, "Brazil");\
\
        System.out.println("Keys: " + countries.keySet());\
        System.out.println("Values: " + countries.values());\
        System.out.println("Contains India? " + countries.containsValue("India"));\
        System.out.println("Contains key 45? " + countries.containsKey(45));\
        countries.remove(3);\
\
        LinkedHashMap<Integer, String> states = new LinkedHashMap<>();\
        states.put(11, "Punjab");\
        states.put(12, "Kerala");\
        states.put(13, "Goa");\
\
        countries.putAll(states);\
        countries.remove(5);\
        System.out.println("Is empty? " + countries.isEmpty());\
        countries.clear();\
        System.out.println("After clear: " + countries);\
\
        TreeMap<Integer, String> sorted = new TreeMap<>(countries);\
        System.out.println("Sorted: " + sorted);\
    \}\
\}\
}